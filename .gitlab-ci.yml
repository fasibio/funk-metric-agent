
# Unit and integration tests
test:
  stage: test
  only:
    - master
  tags: 
    - dockerfasibio
  image: golang:1.12.8
  script:
   - go test -mod=vendor -coverprofile=cov.out
   - go tool cover -func cov.out  
  coverage: /^total:\t+\(statements\)\t+(\d+\.\d+)%/
  artifacts: 
   paths: 
     - ./cov.out

# sonar upload
uploadSonarqube: 
  image: ciricihq/gitlab-sonar-scanner
  stage: sonarqube
  script:
    - sonar-scanner -Dsonar.projectKey=${SONAR_NAME}${CI_COMMIT_REF_NAME} -Dsonar.sources=. -Dsonar.host.url=${SONAR_HOST} -Dsonar.login=$sonarqubelogin
  only: 
    - master
  tags:
    - dockerfasibio
  artifacts: 
    paths: 
      - ./cov.out
 
# build binary
buildBin: 
   stage: buildBin
   only:
    - master
   tags:
     - dockerfasibio
   image: golang:1.12.8-alpine3.9
   script: 
     - GO111MODULE=on CGO_ENABLED=0 GOOS=linux go build -mod vendor -a -installsuffix cgo -o bin/funk_metric_agent_LINUX_${CI_PIPELINE_IID} .
   artifacts:
     paths:
       - bin/funk_metric_agent_LINUX_${CI_PIPELINE_IID}
variables:
   RAILS_ENV: test
   SONAR_NAME: fasibio_metric_agent_
   SONAR_HOST: https://sonar.server2.fasibio.de


push: 
  stage: pushBinToGithub
  variables: 
   DRONE_BUILD_EVENT: tag
   GITHUB_REPO_OWNER: fasibio
   GITHUB_REPO_NAME: ${CI_PROJECT_NAME}
   GITHUB_COMMIT_REF: refs/heads/0.0.${CI_PIPELINE_IID}
   PLUGIN_FILES: "bin/*"
  only:
    - master
  tags:
    - dockerfasibio
  image: socialengine/github-release
  script:
    - github-release release --user $GITHUB_REPO_OWNER --repo $GITHUB_REPO_NAME --tag $GITHUB_COMMIT_REF --name "Release 0.0.${CI_PIPELINE_IID}" --pre-release 
    - github-release upload --user $GITHUB_REPO_OWNER --repo $GITHUB_REPO_NAME --tag $GITHUB_COMMIT_REF --name "funk_metric_agent_LINUX_${CI_PIPELINE_IID}" --file bin/funk_metric_agent_LINUX_${CI_PIPELINE_IID}
stages:
  - test
  - sonarqube
  - buildBin
  - pushBinToGithub

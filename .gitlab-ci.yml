variables:
   RAILS_ENV: test
   SONAR_NAME: fasibio_metric_agent_
   SONAR_HOST: https://sonar.server2.fasibio.de

# Unit and integration tests
test:
  stage: test
  only:
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
  tags: 
    - dockerfasibio
  image: golang:1.12.8
  script:
   
   - go test -mod=vendor -coverprofile=cov.out
   - go tool cover -func cov.out  
  coverage: /^total:\t+\(statements\)\t+(\d+\.\d+)%/
  artifacts: 
   paths: 
     - ./cov.out

# sonar upload
uploadSonarqube: 
  image: ciricihq/gitlab-sonar-scanner
  stage: sonarqube
  script:
    - sonar-scanner -Dsonar.projectKey=${SONAR_NAME}${CI_COMMIT_REF_NAME} -Dsonar.sources=. -Dsonar.host.url=${SONAR_HOST} -Dsonar.login=$sonarqubelogin
  only: 
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
  tags:
    - dockerfasibio
  artifacts: 
    paths: 
      - ./cov.out
 
# build binary
buildBin: 
   stage: buildBin
   only:
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
   tags:
     - dockerfasibio
   image: golang:1.12.8-alpine3.9
   script: 
     - apk add make
     - GO111MODULE=on CGO_ENABLED=0 GOOS=linux go build -mod vendor -a -installsuffix cgo -o bin/funk_metric_agent_LINUX_${CI_COMMIT_REF_NAME} .
   artifacts:
     paths:
       - ./bin

# build Docker Image for explizit versions and release candidates
pushBinToGithub: 
   stage: pushBinToGithub
   only:
    - /^([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3})$/
    - /^rc_([0-9]{0,3})\.([0-9]{0,3})\.([0-9]{0,3}).*/
   tags:
     - dockerfasibio
   varibales:  
     - PLUGIN_FILES: "bin/*"
   image: plugins/github-release
   artifacts:
     paths:
       - ./bin


stages:
  - test
  - sonarqube
  - buildBin
  - pushBinToGithub
